name: Train tabular classification logistic regression model using Scikit learn pipeline
metadata:
  annotations:
    author: Alexey Volkov <alexey.volkov@ark-kun.com>
    canonical_location: https://raw.githubusercontent.com/Ark-kun/pipeline_components/master/samples/Basic_ML_training/Train_tabular_classification_logistic_regression_model_using_Scikit_learn/pipeline.component.yaml
    sdk: https://cloud-pipelines.net/pipeline-editor/
implementation:
  graph:
    tasks:
      Download from GCS:
        componentRef:
          digest: 30c424ac6156c478aa0c3027b470baf9cb7dbbf90aebcabde7469bfbd02a512e
          url: https://raw.githubusercontent.com/Ark-kun/pipeline_components/d8c4cf5e6403bc65bcf8d606e6baf87e2528a3dc/components/google-cloud/storage/download/component.yaml
        arguments:
          GCS path: gs://ml-pipeline-dataset/Chicago_taxi_trips/chicago_taxi_trips_2019-01-01_-_2019-02-01_limit=10000.csv
        annotations:
          editor.position: '{"x":40,"y":40,"width":180,"height":40}'
      Select columns using Pandas on CSV data:
        componentRef:
          digest: 9b9500f461c1d04f1e48992de9138db14a6800f23649d73048673d5ea6dc56ad
          url: https://raw.githubusercontent.com/Ark-kun/pipeline_components/8c78aae096806cff3bc331a40566f42f5c3e9d4b/components/pandas/Select_columns/in_CSV_format/component.yaml
        arguments:
          table:
            taskOutput:
              outputName: Data
              taskId: Download from GCS
          column_names: '["tips", "trip_seconds", "trip_miles", "pickup_community_area", "dropoff_community_area", "fare", "tolls", "extras"]'
        annotations:
          editor.position: '{"x":40,"y":140,"width":180,"height":54}'
      Fill all missing values using Pandas on CSV data:
        componentRef:
          digest: a1b0c29a4615f2e3652aa5d31b9255fa15700e146627c755f8fc172f82e71af7
          url: https://raw.githubusercontent.com/Ark-kun/pipeline_components/23405971f5f16a41b16c343129b893c52e4d1d48/components/pandas/Fill_all_missing_values/in_CSV_format/component.yaml
        arguments:
          table:
            taskOutput:
              outputName: transformed_table
              taskId: Select columns using Pandas on CSV data
              type: CSV
          replacement_value: '0'
        annotations:
          editor.position: '{"x":40,"y":250,"width":180,"height":54}'
      Binarize column using Pandas on CSV data:
        componentRef:
          digest: d699afd4d7cae862708717cc160f4394ed0c04e536e9515923ef1e8865f01d44
          url: https://raw.githubusercontent.com/Ark-kun/pipeline_components/1e2558325f4c708aca75827c8acc13d230ee7e9f/components/pandas/Binarize_column/in_CSV_format/component.yaml
        arguments:
          table:
            taskOutput:
              outputName: transformed_table
              taskId: Fill all missing values using Pandas on CSV data
              type: CSV
          column_name: tips
          predicate: '> 0'
          new_column_name: class
        annotations:
          editor.position: '{"x":40,"y":380,"width":180,"height":54}'
      Train logistic regression model using scikit learn from CSV:
        componentRef:
          digest: 37d41e8a300f593dbaf60e33cf15f4a5f71d18cf347f2b02add65ee51f7d3287
          url: https://raw.githubusercontent.com/Ark-kun/pipeline_components/69a3fccb23196e6f7f731da62da6c8836c594728/components/ML_frameworks/Scikit_learn/Train_logistic_regression_model/from_CSV/component.yaml
        arguments:
          dataset:
            taskOutput:
              outputName: transformed_table
              taskId: Binarize column using Pandas on CSV data
              type: CSV
          label_column_name: class
        annotations:
          editor.position: '{"x":40,"y":510,"width":180,"height":70}'
    outputValues: {}
